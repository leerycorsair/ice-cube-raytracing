std::optional<HitRecord> Sphere::hit(const Ray &ray) const
{
    Vec3 oc = ray.origin - center;
    float a = Dot(ray.direction, ray.direction);
    float h = Dot(oc, ray.direction);
    float c = Dot(oc, oc) - radius * radius;

    float discriminant = h * h - a * c;
    if (discriminant < 0)
        return std::nullopt;

    float root = (-h - std::sqrt(discriminant)) / a;
    if (root < 0.001f)
        return std::nullopt;

    HitRecord record;
    record.position = ray.at(root);
    record.normal = (record.position - center) / radius;
    record.parameter = root;
    record.material = material;
    return record;
}